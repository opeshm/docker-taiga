version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  taiga_backend_media: {}

services:
  postgresql:
    image: arm64v8/postgres:10-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: arm64v8/redis:4.0-alpine

  rabbitmq:
    image: arm64v8/rabbitmq:3.6-alpine
    hostname: taiga_rabbitmq
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOGKIE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}

  backend:
    build: backend/
    volumes:
      - taiga_backend_media:/taiga_backend/media
      - /taiga_backend/static-root
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DB_USER=${POSTGRES_USER}
      - DJANGO_DB_NAME=${POSTGRES_DB}
      - DJANGO_DB_PASSWORD=${POSTGRES_PASSWORD}
    user: taiga
    entrypoint: ['/scripts/entrypoint.sh']
    command: ['gunicorn', '-b', '0.0.0.0:8000', 'taiga.wsgi']

  frontend:
    build: frontend/
    volumes_from:
      - backend:ro
    ports:
      - "8010:80"
    depends_on:
      - postgresql
      - backend
      - events

  celeryworker:
    extends: backend
    entrypoint: []
    command: ['celery', '-A', 'taiga', 'worker', '-P', 'gevent', '-c', '4', '--loglevel', 'info']
    depends_on:
      - redis
      - rabbitmq

  events:
    build: events/
    environment:
      - TAIGA_SECRET=${DJANGO_SECRET_KEY}
    depends_on:
      - rabbitmq
